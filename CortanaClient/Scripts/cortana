#!/usr/bin/python
import os, sys, time, requests

root="https://cortana-home.ddns.net:8080/api/"
def executeInBlue(sh):
    os.system(f"echo -e \"\\e[1;34m$({sh})\\e[0m\"")

def requestAPI(url):
    cmd=f"curl --silent -w '\n' \"{url}\""
    executeInBlue(cmd)

command = " ".join(sys.argv[1:])
if len(sys.argv) > 1:
    if sys.argv[1] == "log":
        try:
            text = requests.get(root).text.replace("'", "\\'")
            cpuTemp = requests.get(root + "raspberry/temperature").text
            roomTemp = requests.get(root + "sensor/temperature").text
            executeInBlue("echo {} \"~\" {}".format(text, cpuTemp))
            executeInBlue("echo Room Temperature: {}".format(roomTemp))
        except:
            executeInBlue("echo Cortana Offline")
    elif sys.argv[1] == "copy":
        os.system("rsync -ru --info=progress2 --force --delete --delete-excluded --include Config --filter=\":- \"\"$CORTANA_PATH\"\"/.gitignore\" \"$CORTANA_PATH\" cortana@192.168.1.117:~/")
    elif sys.argv[1] == "run":
        os.system("nohup dotnet run --project \"$CORTANA_PATH\"/CortanaClient/CortanaClient.csproj > /dev/null 2> /dev/null & disown;")
        executeInBlue("echo Cortana Client started")
    elif sys.argv[1] == "update":
        commit = " ".join(sys.argv[2:])
        if commit == "":
            executeInBlue("echo Update information needed")
        else:
            os.system(f"cd \"$CORTANA_PATH\" && git add . && git commit -m \"{commit}\" && git push")
            executeInBlue("echo Updating code...")
            time.sleep(2)
            api = root + "raspberry/update"
            requestAPI(api)
    elif sys.argv[1] == "kill":
        os.system("killall CortanaClient")
        executeInBlue("echo Cortana Client killed")
    else:
        api = root
        if "=" in command:
            data = command.split("=")
            path = data[0].split(" ")
            api += "/".join(path[:-1]) + "?" + path[-1] + "=" + "+".join(data[1].split(" "))
        else:
            api += "/".join(command.split(" "))
        requestAPI(api)
else:
    requestAPI(root)
    
    

    
